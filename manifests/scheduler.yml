---
meta:
  default:
    azs: [z1]

  cf_exodus_path: (( concat $GENESIS_EXODUS_MOUNT params.cf_deployment_env "/" params.cf_deployment_type ))
  cf_deployment_name: (( concat params.cf_deployment_env "-" params.cf_deployment_type ))
  cf_system_domain: (( vault "secret/exodus/" params.cf_deployment_env "/cf:system_domain" ))

params: # NOTE: Contract with kit & genesis is that params are flat for kits.
  cf_deployment_env:  (( grab genesis.env )) # assume the same env name as cf env
  cf_deployment_type: cf # for crazy people using an non-"cf" cf deployment name
  cf_core_network:    (( vault meta.cf_exodus_path ":core_network" ))
  cf_system_domain:   (( vault meta.cf_exodus_path ":system_domain" ))
  cf_system_org:      (( vault meta.cf_exodus_path ":system_org" ))
  cf_system_space:    (( vault meta.cf_exodus_path ":system_space" ))
  cf_username:        (( vault meta.cf_exodus_path ":admin_username" ))
  cf_password:        (( vault meta.cf_exodus_path ":admin_password" ))
  network:            (( grab params.cf_core_network ))
  nats_client_cert:   (( vault meta.cf_exodus_path ":nats_client_cert" ))
  nats_client_key:    (( vault meta.cf_exodus_path ":nats_client_key" ))
  uaa_client_id:      (( vault meta.cf_exodus_path ":app_scheduler_client" ))
  uaa_client_secret:  (( vault meta.cf_exodus_path ":app_scheduler_secret" ))
  scheduler_domain:   (( concat "scheduler." meta.cf_system_domain ))
  pg_scheme:   "postgres" 
  pg_username: "ocf-scheduler" 
  pg_password: "ocf-scheduler" 
  pg_hostname: "127.0.0.1" 
  pg_port:     "5432" 
  pg_sslmode:  "disable" 
  pg_database: "ocf-scheduler" 

instance_groups:
- name:      scheduler
  instances: 1
  azs:      (( grab params.availability_zones || meta.default.azs ))
  stemcell: default
  networks: 
  - name:  (( grab params.network || "default" ))
  vm_type: (( grab params.vm_type || "default" ))

  jobs: 
  - name: scheduler
    release: ocf-scheduler
    consumes:
      postgres:
        from: scheduler-postgres

    properties:
      scheduler:
        uaa:
          client_id: (( grab params.uaa_client_id ))
          client_secret: (( grab params.uaa_client_secret ))
          endpoint: (( concat "https://uaa."  params.cf_system_domain ))
        cf:
          api: (( concat "https://api." params.cf_system_domain ))
        postgres:
          uri: (( concat "postgres://" params.pg_username ":" params.pg_password "@" params.pg_hostname ":" params.pg_port "/" params.pg_database "?sslmode=" params.pg_sslmode ))

  - name: postgres
    properties:
      databases:
        roles:
        - name:     (( grab params.pg_username ))
          password: (( grab params.pg_password ))
        databases: 
        - name: (( grab params.pg_database ))
        port:   (( grab params.pg_port ))
    provides:
      postgres:
        as: scheduler-postgres
    release: postgres

- name: smoke-tests
  instances: 1
  azs:       (( grab params.availability_zones || meta.default.azs ))
  stemcell:  default
  networks:  
  - name:    (( grab params.network || "default" ))
  vm_type:   (( grab params.vm_type || "default" ))
  lifecycle: errand

  jobs:
  - name: smoke-tests
    release: ocf-scheduler
    properties:
      cf:
        username:     (( grab params.cf_username ))
        password:     (( grab params.cf_password ))
        api:          (( concat "https://api." params.cf_system_domain ))
        organization: (( grab params.cf_system_org ))
        space:        (( grab params.cf_system_space ))

name: scheduler

update:
  canaries:          1
  max_errors:        1
  max_in_flight:     1
  serial:            false
  canary_watch_time: 5000-600000
  update_watch_time: 5000-600000

stemcells:
- alias:   default
  os:      (( grab params.stemcell_os      || "ubuntu-bionic" ))
  version: (( grab params.stemcell_version || "latest" ))

