---
meta:
  default:
    azs: [z1]
  cf:
		exodus:  (( concat $GENESIS_EXODUS_MOUNT params.cf_deployment_env "/" params.cf_deployment_type ))
    deployment_name: (( concat params.cf_deployment_env "-" params.cf_deployment_type ))
  pg_host: "127.0.0.1"
  pg_port: "5432"
  pg_username: "scheduler-admin" 
  pg_password: (( vault meta.vault "/role:password" ))

params:
  network:            (( grab params.cf_core_network ))
  cf_deployment_env:  (( grab genesis.env )) # assumes same name as cf env
  cf_deployment_type: cf # for crazy people using an "non-cf" cf deployment named something else
  cf_core_network:    (( vault meta.cf.exodus ":core_network" ))
  cf_system_domain:   (( vault meta.cf.exodus ":system_domain" ))

  cf_client_id:     (( vault meta.cf.exodus ":scheduler_client" ))
  cf_client_secret: (( vault meta.cf.exodus ":scheduler_secret" ))
  pg_sslmode: "disable"
  pg_database: "scheduler"

instance_groups:
  - name:      scheduler
    instances: 1
    azs:       (( grab params.availability_zones || meta.default.azs ))
    stemcell:  default
    networks:  { name: (( grab params.network || "default" )) }
    vm_type:   (( grab params.vm_type || "default" ))

    jobs: 
      - name: scheduler
        release: scheduler-boshrelease
        consumes:
          postgres:
            from: postgres-db

				properties:
					scheduler:
						uaa:
							client_id: (( grab params.uaa_client_id ))
							client_secret: (( grab params.uaa_client_secret ))
							endpoint: (( concat "https://uaa."  params.cf_system_domain ))
						cf:
							api: (( concat "https://api." params.cf_system_domain )) ##FIXME
						postgres:
							uri: (( concat "postgres://" meta.pg_username ":" meta.pg_password "@" meta.pg_host ":" meta.pg_port "/" params.pg_database "?sslmode=" params.pg_sslmode ))

      - name: postgres
        properties:
          databases:
            roles:
              - name: (( grab meta.pg_username ))
                password: (( grab meta.pg_password ))
            databases: 
            - name: (( grab params.pg_database ))
            port: (( grab meta.pg_port ))
        provides:
          postgres:
            as: postgres-db
        release: postgres

update:
  serial:            false
  canaries:          1
  max_in_flight:     1
  max_errors:        1
  canary_watch_time: 5000-600000
  update_watch_time: 5000-600000

stemcells:
  - alias:   default
    os:      (( grab params.stemcell_os      || "ubuntu-bionic" ))
    version: (( grab params.stemcell_version || "latest" ))


name: scheduler
stemcells:
- alias: default
  os: ubuntu-bionic
  version: latest
releases: []
update:
  canaries: 2
  max_in_flight: 1
  canary_watch_time: 5000-60000
  update_watch_time: 5000-60000
