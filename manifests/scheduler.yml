---
meta:
  default:
    azs: [z1]
  pg:
    scheme:   (( grab params.pg.scheme   || "postgres" ))
    username: (( grab params.pg.username || "ocf-scheduler" ))
    password: (( grab params.pg.password || "ocf-scheduler" ))
    hostname: (( grab params.pg.hostname || "127.0.0.1" ))
    port:     (( grab params.pg.port     || 5432 ))
    sslmode:  (( grab params.pg.sslmode  || "disable" ))
    database: (( grab params.pg.database || "ocf-scheduler" ))
  cf:
    exodus: (( concat $GENESIS_EXODUS_MOUNT params.cf.deployment_env "/" params.cf.deployment_type ))
    deployment_name: (( concat params.cf.deployment_env "-" params.cf.deployment_type ))
    system_domain: (( vault "secret/exodus/" params.cf.deployment_env "/cf:system_domain" ))

params:
  cf:
    deployment_env:  (( grab genesis.env )) # assume the same env name as cf env
    deployment_type: cf # for crazy people using an non-"cf" cf deployment name
    core_network:    (( vault meta.cf.exodus ":core_network" ))
    system_domain:   (( vault meta.cf.exodus ":system_domain" ))
    system_org:      (( vault meta.cf.exodus ":system_org" ))
    system_space:    (( vault meta.cf.exodus ":system_space" ))
    username:        (( vault meta.cf.exodus ":admin_username" ))
    password:        (( vault meta.cf.exodus ":admin_password" ))
  network:           (( grab params.cf.core_network ))
  nats:
    client_cert: (( vault meta.cf.exodus ":nats_client_cert" ))
    client_key:  (( vault meta.cf.exodus ":nats_client_key" ))
  uaa:
    client_id:     (( vault meta.cf.exodus ":app_scheduler_client" ))
    client_secret: (( vault meta.cf.exodus ":app_scheduler_secret" ))
  scheduler:
    domain:  (( concat "scheduler." meta.cf.system_domain ))

instance_groups:
- name:      scheduler
  instances: 1
  azs:      (( grab params.availability_zones || meta.default.azs ))
  stemcell: default
  networks: 
  - name:  (( grab params.network || "default" ))
  vm_type: (( grab params.vm_type || "default" ))

  jobs: 
  - name: scheduler
    release: ocf-scheduler
    consumes:
      postgres:
        from: scheduler-postgres

    properties:
      scheduler:
        uaa:
          client_id: (( grab params.uaa.client_id ))
          client_secret: (( grab params.uaa.client_secret ))
          endpoint: (( concat "https://uaa."  params.cf.system_domain ))
        cf:
          api: (( concat "https://api." params.cf.system_domain ))
        postgres:
          uri: (( concat "postgres://" meta.pg.username ":" meta.pg.password "@" meta.pg.hostname ":" meta.pg.port "/" meta.pg.database "?sslmode=" meta.pg.sslmode ))

  - name: postgres
    properties:
      databases:
        roles:
        - name:     (( grab meta.pg.username ))
          password: (( grab meta.pg.password ))
        databases: 
        - name: (( grab meta.pg.database ))
        port:   (( grab meta.pg.port ))
    provides:
      postgres:
        as: scheduler-postgres
    release: postgres

- name: smoke-tests
  instances: 1
  azs:       (( grab params.availability_zones || meta.default.azs ))
  stemcell:  default
  networks:  
  - name:    (( grab params.network || "default" ))
  vm_type:   (( grab params.vm_type || "default" ))
  lifecycle: errand

  jobs:
  - name: smoke-tests
    release: ocf-scheduler
    properties:
      cf:
        username:     (( grab params.cf.username ))
        password:     (( grab params.cf.password ))
        api:          (( concat "https://api." params.cf.system_domain ))
        organization: (( grab params.cf.system_org ))
        space:        (( grab params.cf.system_space ))

name: scheduler

update:
  canaries:          1
  max_errors:        1
  max_in_flight:     1
  serial:            false
  canary_watch_time: 5000-600000
  update_watch_time: 5000-600000

stemcells:
- alias:   default
  os:      (( grab params.stemcell_os      || "ubuntu-bionic" ))
  version: (( grab params.stemcell_version || "latest" ))

